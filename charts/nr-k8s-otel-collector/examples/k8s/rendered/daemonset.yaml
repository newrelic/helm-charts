---
# Source: nr-k8s-otel-collector/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: example-nr-k8s-otel-collector-daemonset
  namespace: default
  labels:
    app.kubernetes.io/instance: example
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nr-k8s-otel-collector
    app.kubernetes.io/version: 1.0.3
    helm.sh/chart: nr-k8s-otel-collector-0.8.10
spec: 
  selector:
    matchLabels:
      app.kubernetes.io/instance: example
      app.kubernetes.io/name: nr-k8s-otel-collector
      component: daemonset
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: example
        app.kubernetes.io/name: nr-k8s-otel-collector
        component: daemonset
      annotations:
        checksum/config: 66a3e14c1f268b057bb8e58b7d2317d9f0f152f9901b54a6db0bafc9362dc82f
    spec:
      serviceAccountName: example-nr-k8s-otel-collector
      containers:
        - name: otel-collector-daemonset
          securityContext:
            privileged: true
          image: "newrelic/nr-otel-collector:0.8.3"
          imagePullPolicy: IfNotPresent
          args: ["--config", "/config/daemonset-config.yaml", "--feature-gates","receiver.kubeletstats.enableCPUUsageMetrics"]
          resources:
            {}
          env:
            - name: HOST_IP
              valueFrom: 
                fieldRef:
                  fieldPath: status.hostIP 
            - name: OTEL_EXPORTER_OTLP_ENDPOINT 
              value: "http://$(HOST_IP):55680"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom: 
                fieldRef:
                  fieldPath: metadata.uid
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.instance.id=$(POD_NAME),k8s.pod.uid=$(POD_UID)
            - name: NR_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: example-nr-k8s-otel-collector-license
                  key: licenseKey
          volumeMounts:
            - name: host-fs
              mountPath: /hostfs
              readOnly: true
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
            - name: daemonset-config
              mountPath: /config
      volumes:
        - name: host-fs
          hostPath:
            path: /
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: daemonset-config
          configMap:
            name: example-nr-k8s-otel-collector-daemonset-config
