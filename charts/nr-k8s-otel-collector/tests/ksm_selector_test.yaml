suite: ksmSelector
templates:
  - templates/deployment-configmap.yaml
release:
  name: my-release
  namespace: my-namespace
tests:
  - it: uses default KSM selector when not specified
    set:
      cluster: my-cluster
      licenseKey: us-whatever
    asserts:
      - template: templates/deployment-configmap.yaml
        matchRegex:
          path: data["deployment-config.yaml"]
          pattern: |
            ^\s*receivers:[\S\s]*prometheus/ksm:\s+config:\s+scrape_configs:\s+- job_name: kube-state-metrics\s+scrape_interval: 1m\s+kubernetes_sd_configs:\s+- role: pod\s+relabel_configs:\s+- action: keep\s+regex: kube-state-metrics\s+source_labels:\s+- __meta_kubernetes_pod_label_app_kubernetes_io_name\s+- action: replace\s+target_label: job_label\s+replacement: kube-state-metrics\s+

  - it: uses custom KSM selector when specified
    set:
      cluster: my-cluster
      licenseKey: us-whatever
      receivers:
        prometheus:
          ksmSelector: "app.kubernetes.io/instance=my-custom-ksm"
    asserts:
      - template: templates/deployment-configmap.yaml
        matchRegex:
          path: data["deployment-config.yaml"]
          pattern: |
            ^\s*receivers:[\S\s]*prometheus/ksm:\s+config:\s+scrape_configs:\s+- job_name: kube-state-metrics\s+scrape_interval: 1m\s+kubernetes_sd_configs:\s+- role: pod\s+relabel_configs:\s+- action: keep\s+regex: my-custom-ksm\s+source_labels:\s+- __meta_kubernetes_pod_label_app_kubernetes_io_instance\s+- action: replace\s+target_label: job_label\s+replacement: kube-state-metrics\s+

  - it: handles custom selector with different label key
    set:
      cluster: my-cluster
      licenseKey: us-whatever
      receivers:
        prometheus:
          ksmSelector: "custom.label/name=test-value"
    asserts:
      - template: templates/deployment-configmap.yaml
        matchRegex:
          path: data["deployment-config.yaml"]
          pattern: |
            ^\s*receivers:[\S\s]*prometheus/ksm:\s+config:\s+scrape_configs:\s+- job_name: kube-state-metrics\s+scrape_interval: 1m\s+kubernetes_sd_configs:\s+- role: pod\s+relabel_configs:\s+- action: keep\s+regex: test-value\s+source_labels:\s+- __meta_kubernetes_pod_label_custom_label_name\s+- action: replace\s+target_label: job_label\s+replacement: kube-state-metrics\s+

  - it: handles selector with hyphens in label name
    set:
      cluster: my-cluster
      licenseKey: us-whatever
      receivers:
        prometheus:
          ksmSelector: "app-name=ksm-prod"
    asserts:
      - template: templates/deployment-configmap.yaml
        matchRegex:
          path: data["deployment-config.yaml"]
          pattern: |
            ^\s*receivers:[\S\s]*prometheus/ksm:\s+config:\s+scrape_configs:\s+- job_name: kube-state-metrics\s+scrape_interval: 1m\s+kubernetes_sd_configs:\s+- role: pod\s+relabel_configs:\s+- action: keep\s+regex: ksm-prod\s+source_labels:\s+- __meta_kubernetes_pod_label_app-name\s+- action: replace\s+target_label: job_label\s+replacement: kube-state-metrics\s+

  - it: uses default selector when receivers.prometheus is set but ksmSelector is not
    set:
      cluster: my-cluster
      licenseKey: us-whatever
      receivers:
        prometheus:
          enabled: true
    asserts:
      - template: templates/deployment-configmap.yaml
        matchRegex:
          path: data["deployment-config.yaml"]
          pattern: |
            ^\s*receivers:[\S\s]*prometheus/ksm:\s+config:\s+scrape_configs:\s+- job_name: kube-state-metrics\s+scrape_interval: 1m\s+kubernetes_sd_configs:\s+- role: pod\s+relabel_configs:\s+- action: keep\s+regex: kube-state-metrics\s+source_labels:\s+- __meta_kubernetes_pod_label_app_kubernetes_io_name\s+- action: replace\s+target_label: job_label\s+replacement: kube-state-metrics\s+

  - it: correctly formats label key with dots and slashes
    set:
      cluster: my-cluster
      licenseKey: us-whatever
      receivers:
        prometheus:
          ksmSelector: "io.kubernetes.pod.name/instance=test"
    asserts:
      - template: templates/deployment-configmap.yaml
        matchRegex:
          path: data["deployment-config.yaml"]
          pattern: |
            ^\s*receivers:[\S\s]*prometheus/ksm:\s+config:\s+scrape_configs:\s+- job_name: kube-state-metrics\s+scrape_interval: 1m\s+kubernetes_sd_configs:\s+- role: pod\s+relabel_configs:\s+- action: keep\s+regex: test\s+source_labels:\s+- __meta_kubernetes_pod_label_io_kubernetes_pod_name_instance\s+- action: replace\s+target_label: job_label\s+replacement: kube-state-metrics\s+
