{{- if and (include "newrelic-logging.areValuesValid" .) .Values.enableLinux }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ .Release.Namespace }}
  labels: {{ include "newrelic-logging.labels" . | indent 4 }}
  name: {{ template "newrelic-logging.fullname" . }}
  annotations:
  {{- if .Values.daemonSet.annotations }}
{{ toYaml .Values.daemonSet.annotations | indent 4 }}
  {{- end }}
spec:
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
      app: {{ template "newrelic-logging.name" . }}
      release: {{.Release.Name }}
  template:
    metadata:
      annotations:
        checksum/fluent-bit-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8}}
    {{- end }}
      labels:
        app: {{ template "newrelic-logging.name" . }}
        release: {{.Release.Name }}
        kubernetes.io/os: linux
        app.kubernetes.io/name: {{ template "newrelic-logging.name" . }}
        {{- if .Values.podLabels}}
        {{ toYaml .Values.podLabels }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "newrelic.common.serviceAccount.name" . }}
      hostNetwork: true # This option is a requirement for the Infrastructure Agent to report the proper hostname in New Relic.
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 10
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
      {{- end }}
      {{- with include "newrelic.common.securityContext.pod" . }}
      securityContext:
        {{- . | nindent 8 }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
{{ toYaml .Values.initContainers | indent 8 }}
      {{- end }}
      containers:
        - name: {{ template "newrelic-logging.name" . }}
          {{- with include "newrelic.common.securityContext.container" . }}
          securityContext:
            {{- . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: ENDPOINT
              {{- if (include "newrelic.nrStaging" .) }}
              value: "https://staging-log-api.newrelic.com/log/v1"
              {{- else if .Values.endpoint }}
              value: {{ .Values.endpoint }}
              {{- else if eq (substr 0 2 (include "newrelic-logging.licenseKey" .)) "eu" }}
              value: "https://log-api.eu.newrelic.com/log/v1"
              {{- else }}
              value: "https://log-api.newrelic.com/log/v1"
              {{- end }}
            - name: SOURCE
              value: {{ if (include "newrelic-logging.lowDataMode" .) }} "k8s" {{- else }} "kubernetes" {{- end }}
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  {{- if (include "newrelic-logging.licenseKey" .) }}
                  name: {{ template "newrelic-logging.fullname" . }}-config
                  key: license
                  {{- else }}
                  name: {{ include "newrelic-logging.customSecretName" . }}
                  key: {{ include "newrelic-logging.customSecretKey" . }}
                  {{- end }}
            - name: CLUSTER_NAME
              value: {{ include "newrelic-logging.cluster" . }}
            - name: LOG_LEVEL
              value: {{ .Values.fluentBit.logLevel | quote }}
            - name: LOG_PARSER
              {{- if .Values.fluentBit.criEnabled }}
              value: "cri"
              {{- else }}
              value: "docker"
              {{- end }}
            - name: FB_DB
              value: {{ .Values.fluentBit.db | quote }}
            - name: PATH
              value: {{ .Values.fluentBit.path | quote }}
            - name: K8S_BUFFER_SIZE
              value: {{ .Values.fluentBit.k8sBufferSize | quote }}
            - name: K8S_LOGGING_EXCLUDE
              value: {{ .Values.fluentBit.k8sLoggingExclude | quote }}
            - name: LOW_DATA_MODE
              value: {{ include "newrelic-logging.lowDataMode" . | default "false" | quote }}
            - name: RETRY_LIMIT
              value: {{ .Values.fluentBit.retryLimit | quote }}
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- include "newrelic-logging.extraEnv" . | nindent 12 }}
          command:
            - /fluent-bit/bin/fluent-bit
            - -c
            - /fluent-bit/etc/fluent-bit.conf
            - -e
            - /fluent-bit/bin/out_newrelic.so
          volumeMounts:
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
            - name: var
              mountPath: /var
          {{- if .Values.exposedPorts }}
          ports: {{ toYaml .Values.exposedPorts | nindent 12 }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
              {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
      volumes:
        - name: fluent-bit-config
          configMap:
            name: {{ template "newrelic-logging.fluentBitConfig" . }}
        - name: var
          hostPath:
            path: /var
      {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- if $.Values.priorityClassName }}
      priorityClassName: {{ $.Values.priorityClassName }}
      {{- end }}
      {{- if .Values.nodeAffinity }}
      affinity:
        nodeAffinity: {{ .Values.nodeAffinity | toYaml | nindent 10 }}
      {{- else if include "newrelic.fargate" . }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: eks.amazonaws.com/compute-type
                    operator: NotIn
                    values:
                      - fargate
      {{- end }}
      nodeSelector:
        {{- if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | indent 8 }}
        {{- else if $.Values.enableWindows }}
        # We add this only if Windows is enabled to keep backwards-compatibility. Prior to version 1.14, this label was
        # named beta.kubernetes.io/os. In version 1.14, it was deprecated and replaced by this one. Version 1.14 also
        # introduces Windows support. Therefore, anyone wishing to use Windows containers must bet at version >=1.14 and
        # are going to need this label, in order to avoid placing a linux container on a windows node, and vice-versa.
        kubernetes.io/os: linux
        {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
{{- end }}
