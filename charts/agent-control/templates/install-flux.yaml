{{- if .Values.agentControlCd.enabled }}
{{- $installJobName := include "newrelic.common.naming.truncateToDNSWithSuffix" ( dict "name" (include "newrelic.common.naming.fullname" .) "suffix" "flux-install-job" ) -}}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "20"
  name: {{ $installJobName }}
  namespace: {{ .Release.Namespace }}
spec:
  backoffLimit: 2
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "newrelic.common.naming.truncateToDNSWithSuffix" (dict "name" .Release.Name "suffix" "flux-install-job") }}
      containers:
        - name: install-flux
          image: {{ include "newrelic.common.images.image" ( dict "imageRoot" .Values.toolkitImage "context" .) }}
          imagePullPolicy: {{ .Values.toolkitImage.pullPolicy }}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          command: ["/bin/sh", "-c"]
          env:
          {{- if .Values.agentControlCd.repositorySecretReferenceName }}
            - name: HELM_REPO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agentControlCd.repositorySecretReferenceName }}
                  key: username
            - name: HELM_REPO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agentControlCd.repositorySecretReferenceName }}
                  key: password
          {{- end -}}
          {{- with .Values.installation.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - |
              HELM_RELEASE_EXISTS=$(kubectl get HelmRelease agent-control-cd -n {{ .Release.Namespace }})
              if [ -z "$HELM_RELEASE_EXISTS" ]; then
                echo "Adding agent-control-cd repository..."
                helm repo add newrelic-agent-control-cd {{ .Values.agentControlCd.chartRepositoryUrl }}
{{- /* Use TLS Options */ -}}
{{- if .Values.agentControlCd.repositoryCertificateSecretReferenceName }} \
                  --ca-file /etc/flux-cert/ca.crt \
                  --cert-file /etc/flux-cert/tls.crt \
                  --key-file /etc/flux-cert/tls.key
{{- /* Use basic auth options */ -}}
{{- else if .Values.agentControlCd.repositorySecretReferenceName }} \
                  --username $HELM_REPO_USERNAME \
                  --password $HELM_REPO_PASSWORD
{{- end }}
                echo "Installing agent-control-cd..."
                helm upgrade --install agent-control-cd newrelic-agent-control-cd/{{ .Values.agentControlCd.chartName }} \
                  --version {{ .Values.agentControlCd.chartVersion | default .Chart.Annotations.agentControlCdVersion }} \
                  --namespace {{ .Release.Namespace }} \
                  -f /tmp/flux-values/agent-control-flux.yaml
              else
                echo "agent-control-cd HelmRelease already exists, skipping installation."
                exit 0
              fi
          volumeMounts:
            - name: flux-values
              mountPath: /tmp/flux-values
              readOnly: true
            {{- if .Values.agentControlCd.repositoryCertificateSecretReferenceName }}
            - name: flux-cert-secrets
              mountPath: /etc/flux-cert
              readOnly: true
            {{- end }}
            {{- with .Values.installation.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: flux-values
          secret:
            secretName: {{ include "agent-control.secret.name" . }}-flux
        {{- if .Values.agentControlCd.repositoryCertificateSecretReferenceName }}
        - name: flux-cert-secrets
          secret:
            secretName: {{ .Values.agentControlCd.repositoryCertificateSecretReferenceName }}
            items:
              - key: ca.crt
                path: ca.crt
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
        {{- end }}
        {{- with .Values.installation.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end -}}
