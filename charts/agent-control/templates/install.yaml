{{- if (index .Values "agent-control-deployment").enabled -}}
{{- $installJobName := include "newrelic.common.naming.truncateToDNSWithSuffix" ( dict "name" (include "newrelic.common.naming.fullname" .) "suffix" "install-job" ) -}}
{{- $secretName := include "agent-control.secret.name" . -}}
{{- $fluxSecretName := printf "%s-flux" (include "agent-control.secret.name" .) -}}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "20"
  name: {{ $installJobName }}
  namespace: {{ .Release.Namespace }}
spec:
  backoffLimit: 2
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "newrelic.common.naming.truncateToDNSWithSuffix" (dict "name" .Release.Name "suffix" "install-job") }}
      containers:
        - name: install-agent-control-deployment
          image: {{ include "newrelic.common.images.image" ( dict "imageRoot" .Values.toolkitImage "context" .) }}
          imagePullPolicy: {{ .Values.toolkitImage.pullPolicy }}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Creating agent-control-deployment resources..."
              newrelic-agent-control-cli install-agent-control \
                --chart-version={{ .Values.installationJob.agentControlDeployment.chartVersion | default .Chart.AppVersion }} \
                --secrets={{ $secretName }}=agent-control-deployment.yaml,{{ $secretName }}=global.yaml \
                --namespace={{ .Release.Namespace }} \
                --repository-url={{ .Values.installationJob.agentControlDeployment.chartRepositoryUrl }} \
                --log-level={{ .Values.installationJob.logLevel }} \
            {{- if .Values.installationJob.repositorySecretReferenceName }}
                --repository-secret-reference-name={{ .Values.installationJob.repositorySecretReferenceName }} \
            {{- end }}
            {{- if .Values.installationJob.repositoryCertificateSecretReferenceName }}
                --repository-certificate-secret-reference-name={{ .Values.installationJob.repositoryCertificateSecretReferenceName }} \
            {{- end }}
                --chart-name={{ .Values.installationJob.agentControlDeployment.chartName }}

            {{- if (index .Values "agent-control-cd" "flux2").enabled }}
              echo "Creating Flux's CD resources..."
              newrelic-agent-control-cli create-flux-resources \
                --chart-version={{ .Values.installationJob.agentControlCd.chartVersion }} \
                --secrets={{ $fluxSecretName }}=agent-control-flux.yaml \
                --namespace={{ .Release.Namespace }} \
                --repository-url={{ .Values.installationJob.agentControlCd.chartRepositoryUrl }} \
                --log-level={{ .Values.installationJob.logLevel }} \
                --chart-name={{ .Values.installationJob.agentControlCd.chartName }}
            {{- end }}
{{- end -}}
