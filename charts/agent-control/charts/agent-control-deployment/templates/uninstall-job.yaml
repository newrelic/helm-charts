{{- if .Values.cleanupManagedResources -}}
{{- $uninstallName := include "newrelic.common.naming.truncateToDNSWithSuffix" ( dict "name" (include "newrelic.common.naming.fullname" .) "suffix" "deployment-uninstall" ) -}}
{{- $uninstallServiceAccountName := include "newrelic.common.naming.truncateToDNSWithSuffix" (dict "name" (include "newrelic.common.serviceAccount.name" .) "suffix" "deployment-uninstall" ) -}}

{{- /*
The resources managed by the agent-control and the label selector are hardcoded on the agent-control.
Notice that instrumentations needs to go first since it depends on a chart installed through helmreleases
*/ -}}
{{- $acCRList := (list "instrumentations.newrelic.com" "helmreleases.helm.toolkit.fluxcd.io" "helmrepositories.source.toolkit.fluxcd.io") -}}
{{- $acResourcesLabelSelector := "app.kubernetes.io/managed-by=newrelic-agent-control" -}}
{{- $authJobResourcesLabelSelector := "app.kubernetes.io/created-by=ac-auth-job" -}}

apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "10010"
  name: {{ $uninstallName }}
  namespace: {{ .Release.Namespace }}
spec:
  ttlSecondsAfterFinished: 120
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: {{ $uninstallServiceAccountName }}
      containers:
        - name: delete-managed-resources
          image: bitnami/kubectl  # TODO: Pin version to the latest that we support.
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          command:
            - bash
          args:
            - -c
            - |
              set -o pipefail

              # We want to avoid having the SA recreating some of the resources we are deleting running this job
              kubectl scale deployment --replicas=0 {{ include "newrelic.common.naming.fullname" . }}  -n {{ $.Release.Namespace }} --timeout=60s

              # Delete the standard resources (configmaps and secrets) managed by the agent-control
              kubectl delete configmaps -n {{ .Release.Namespace }} -l {{ $acResourcesLabelSelector }}
              kubectl delete secrets -n {{ .Release.Namespace }} -l {{ $acResourcesLabelSelector }}

              # Delete the CRs managed by the agent-control if the corresponding CRDs exist
              {{ range $i, $cr := $acCRList }}
              if kubectl api-resources -o name |grep {{ $cr }}; then
                kubectl -n {{ $.Release.Namespace }} delete {{ $cr }} -l {{ $acResourcesLabelSelector }}
              fi
              {{ end }}
      
              {{- if include "newrelic-agent-control.auth.secret.shouldRunJob" . }}
              # Delete the secrets created in the cluster
              kubectl delete secrets -n {{ .Release.Namespace }} -l {{ $authJobResourcesLabelSelector }}
              {{- end }}

{{ if .Values.rbac.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1010"
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
  name: {{ $uninstallName }}
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - source.toolkit.fluxcd.io
      - helm.toolkit.fluxcd.io
      - newrelic.com
    resources: [ "*" ]
    verbs:
      - delete
      - deletecollection
      - get
      - list
      - watch
  - apiGroups: [ "" ]
    resources: [ "configmaps", "secrets" ]
    verbs:
      - delete
      - deletecollection
      - get
      - list
      - watch
  - apiGroups: [ "apps" ]
    resources:
      - deployments/scale
    verbs:
      - get
      - patch
      - update
  - apiGroups: [ "apps" ]
    resources:
      - deployments
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1009"
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
  name: {{ $uninstallName }}
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $uninstallName }}
subjects:
  - kind: ServiceAccount
    name: {{ $uninstallServiceAccountName }}
    namespace: {{ .Release.Namespace }}
{{- end }}

{{- if include "newrelic.common.serviceAccount.create" . }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1010"
  {{- if include "newrelic.common.serviceAccount.annotations" . }}
    {{- include "newrelic.common.serviceAccount.annotations" . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
  name: {{ $uninstallServiceAccountName }}
  namespace: {{ .Release.Namespace }}
{{- end -}}   

{{- end -}}
