# This is a YAML-formatted file that contains default values for synthetics-minion.
# Declare variables to be passed into your templates.

# The replicaCount allows the specification of how many pods you want running.
replicaCount: 1
# The imagePullSecrets stores Docker credentials that are used for accessing a registry.
imagePullSecrets: []
# The nameOverride replaces the name of the chart in the Chart.yaml file.
nameOverride: ""
# By default, fullname uses '-. This overrides that and uses the given string instead.
fullnameOverride: ""
# The appVersionOverride overrides the current app version.
appVersionOverride: ""

synthetics:
  # The privateLocationKey is a key generated when creating a private location. The default value is empty.
  # Private locations allow you to run monitors in new geographical locations or behind a firewall, such as an intranet site.
  privateLocationKey: ""
  # privateLocationKeySecretName expects a Kubernetes Secret to exist that includes the key privateLocationKey
  privateLocationKeySecretName: ""
  # The minionLogLevel is defaulted to INFO, which report about normal operations, but they provide the skeleton of what happened.
  # Other Options:
  # 1. DEBUG: These messages report detailed diagnostic information and more information than you'd want in normal production situations.
  # 2. TRACE: These messages capture every detail you possibly can about the minion's behavior.
  minionLogLevel: "INFO"
  # The number of workers the minion will use to run heavy jobs (BROWSER, SCRIPT_BROWSER, SCRIPT_API). The maximum allowed value for this parameter is 50.
  heavyWorkers: "2"
  # The number of workers the minion will use to run lightweight jobs (SIMPLE Ping Jobs). The maximum allowed value for this parameter is 1250.
  lightweightWorkers: "50"

  ## For US-based accounts, the endpoint is: https://synthetics-horde.nr-data.net.
  ## For EU-based accounts, the endpoint is: https://synthetics-horde.eu01.nr-data.net/
  #  minionApiEndpoint: ""

  ## The Docker Registry and Organization where the Minion Runner image is hosted. The default is quay.io/newrelic, however you can use this parameter to override it.
  #  minionDockerRunnerRegistryEndpoint: ""

  ## If set, enables verified script execution and uses this value as a passphrase.
  #  minionVsePassphrase: ""

  ## If set, the format is: "host:port".
  #  minionApiProxy: ""

  ## If set, the accepted values are: true, 1, or yes.
  #  minionApiProxySelfSignedCert: ""

  ## If set, the format is: "username:password". Support HTTP Basic Authentication and additional authentication protocols supported by Chrome.
  #  minionApiProxyAuth: ""

  ## The minionCheckTimeout represents the maximum amount of seconds that your monitor checks are allowed to run.
  ## The minimum allowed value for this parameter is 1 second and the maximum allowed value for this parameter is 900 seconds.
  ## The default is 65 seconds for ping monitors, 180 seconds for browser monitors, script_browser monitors, and script_api monitors.
  #  minionCheckTimeout: ""

  ## The minionUserDefinedEnvVariables defines the locally hosted set of user defined key value pairs.
  #  minionUserDefinedEnvVariable: ""

  ## The minionJVMOpts passes command line options to the internal JVM.
  ## For more information: https://docs.oracle.com/javase/8/docs/technotes/tools/unix/java.html
  #  minionJVMOpts: "-XX:-UsePerfData"

  ## A minion is not healthy if it cannot connect to the public internet. Set this value to true to bypass this health check.
  #  minionNetworkHealthCheckDisabled: "false"

image:
  # This parameter determines what container the pod will run as.
  repository: quay.io/newrelic/synthetics-minion
  # The pull policy is defaulted to IfNotPresent, which skips pulling an image if it already exists. If pullPolicy is defined without a specific value, it is also set to Always.
  pullPolicy: IfNotPresent

persistence:
  # The name of the PVC to use
  # If undefined or not set Statefulset will dynamically create a PVC for each replica
  #
  # claimName: ""

  ## Override the StorageClass for VolumeClaimTemplates (relevant only if claimName is undefined or empty )
  ## If defined and claimName is empty, storageClassName: <storageClass>, i.e the PVC can be bound to the PVs
  ## having <storageClass> Storage class.
  ## If set to "-", storageClassName: "", i.e the PVC can bound to the PVs that have no class (dynamic provisioning is
  ## disabled)
  ## If undefined (the default) or set to null, no storageClassName is set, i.e the PVC can bound to the PVs having
  ## Default Storage class.
  ##
  ## For more details see https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  ##
  # storageClass: "-"

  # Relevant only if the claimName is undefined or empty, the access mode defines how the volume is mounted and the how many nodes it mounted by.
  # Options:
  # 1. ReadWriteOnce (RWO): the volume can be mounted as read-write by a single node
  # 2. ReadOnlyMany (ROX): the volume can be mounted read-only by many nodes
  # 3. ReadWriteMany (RWX): the volume can be mounted as read-write by many nodes
  accessMode: ReadWriteOnce

  # Relevant only if claimName is undefined or empty, any items of metadata that are not used for querying are considered annotiations.
  annotations: {}

  # Relevant only if claimName is undefined or empty, size to be defined for the PVC (relevant only if claimName is undefined or empty )
  size: 10Gi

  ## Path on the volume to the permanent data storage directory
  # permanentData: "permanent-data-storage"

  ## Path on the volume to the custom modules directory
  # customModules: "custom-modules"

  ## Path on the volume to the user-defined-variable.json file
  # userDefinedVariables: "user-defined-variables.json"

serviceAccount:
  # A boolean value that specifies whether a service account should be created or not.
  create: false

  # Any items of metadata that are not used for querying are considered annotiations.
  annotations: {}

  # The name of the serviceAccount to use. If value is not set and create is true, a name is generated using the fullname template.
  name:

# Default Kubernetes does not include a jobs/log resource.
# removeJobsLog: true

headlessService:
  # The name of the headless service to associate to the statefulSet. A headless service is a service with a service IP but instead of load-balancing it will return the IPs of our associated Pods. This allows us to interact directly with the Pods instead of a proxy. If not set a name is generated using the fullname template.
  # For more information about services: https://kubernetes.io/docs/concepts/services-networking/service/
  serviceName:

# Assigning a uid which will be defaulted to 2379, this can be changed as needed. A uid is needed for the synthetics-minion and synthetics-minion-runner to share data. It must be the same across these containers. Also, uid must match the permissions for the custom-modules if this feature is used.
podSecurityContextRunAsUser: 2379

## The AppArmor profile name that will be applied to the Minion and Runner pods. If set, then the AppArmor profile must exist on the Kubernetes node(s) for this to work.
# appArmorProfileName: ""

resources:
  requests:
    cpu: "500m"
    memory: "800Mi"
  limits:
    cpu: "750m"
    memory: "1600Mi"

labels: {}

annotations: {}

nodeSelector: {}

tolerations: []

affinity: {}
