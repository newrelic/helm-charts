{{- if include "newrelic.compatibility.ksm.enabled" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "newrelic.labels" . | nindent 4 }}
  name: {{ template "newrelic.fullname" . }}-ksm
  {{- $legacyAnnotation:= fromYaml (include "newrelic.compatibility.annotations" .) -}}
  {{- with  include "newrelic.compatibility.valueWithFallback" (dict "legacy" $legacyAnnotation "supported" .Values.ksm.annotations )}}
  annotations: {{ . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "newrelic.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ksm
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: {{ include (print $.Template.BasePath "/ksm/configmap.yaml") . | sha256sum }}
        {{- if not (include "newrelic.licenseCustomSecretName" .) }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if (include "newrelic.compatibility.agentConfig" . ) }}
        checksum/agent-config: {{ include (print $.Template.BasePath "/agent-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "newrelic.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ksm
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        mode: {{ include "newrelic.mode" . }}
    spec:
      {{- with .Values.images.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "newrelic.serviceAccountName" . }}
      containers:
        - name: ksm
          image: "{{ .Values.images.integration.registry }}/{{ .Values.images.integration.repository }}:{{ .Values.images.integration.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.integration.pullPolicy }}
          securityContext:
            {{- mustMergeOverwrite .Values.securityContext  (include "newrelic.compatibility.securityContext" . | fromYaml) | toYaml | nindent 12 }}
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8002"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: {{ include "newrelic.cluster" . | required "cluster name must be set" }}
            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            {{- if .Values.verboseLog }}
            - name: NRI_KUBERNETES_VERBOSE
              value: "1"
            {{- end }}
            {{- with .Values.ksm.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.ksm.extraEnvFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
            {{- with .Values.ksm.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.ksm.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
        - name: forwarder
          image: "{{ .Values.images.forwarder.registry }}/{{ .Values.images.forwarder.repository }}:{{ .Values.images.forwarder.tag }}"
          imagePullPolicy: {{ .Values.images.forwarder.pullPolicy }}
          securityContext:
            {{- mustMergeOverwrite .Values.securityContext  (include "newrelic.compatibility.securityContext" . | fromYaml) | toYaml | nindent 12 }}
          ports:
            - containerPort: 8002
          env:
            - name: "NRIA_OVERRIDE_HOSTNAME_SHORT"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRIA_HTTP_SERVER_PORT"
              value: "8002"
            - name: "K8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            {{- if .Values.verboseLog }}
            - name: NRIA_VERBOSE
              value: "1"
            {{- end }}
            {{- if .Values.useNodeNameAsDisplayName }}
            - name: "NRIA_DISPLAY_NAME"
            {{- if .Values.prefixDisplayNameWithCluster }}
              value: "{{ include "newrelic.cluster" . }}:$(K8S_NODE_NAME)"
            {{- else }}
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            {{- end }}
            {{- end }}
            {{- if (include "newrelic.customAttributes" .) }}
            - name: "NRIA_CUSTOM_ATTRIBUTES"
              value: >-
                {{- include "newrelic.customAttributes" . | nindent 16 }}
            {{- end }}
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "newrelic.licenseSecretName" . | required "licenseKey or customSecretName and customSecretLicenseKey must be set" }}
                  key: {{ include "newrelic.licenseSecretKey" . | required "licenseKey or customSecretName and customSecretLicenseKey must be set" }}
            {{- if (include "newrelic.nrStaging" .) }}
            - name: NRIA_STAGING
              value: "true"
            {{- end }}
            - name: NRIA_IS_FORWARD_ONLY
              value: "true"
            {{- with .Values.ksm.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.ksm.extraEnvFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: forwarder-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: forwarder-tmpfs-user-data
            - mountPath: /tmp
              name: forwarder-tmpfs-tmp
            {{- if (include "newrelic.compatibility.agentConfig" . ) }}
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
            {{- end }}
            {{- with .Values.ksm.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.ksm.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: nri-kubernetes-config
          configMap:
            name: {{ template "newrelic.fullname" . }}-ksm
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: forwarder-tmpfs-data
          emptyDir: {}
        - name: forwarder-tmpfs-user-data
          emptyDir: {}
        - name: forwarder-tmpfs-tmp
          emptyDir: {}
        {{- if (include "newrelic.compatibility.agentConfig" . ) }}
        - name: config
          configMap:
            name: {{ template "newrelic.fullname" . }}-agent
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
        {{- end }}
        {{- with .Values.ksm.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $.Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- $nodeAffinity:=(include "newrelic.compatibility.valueWithFallback" (dict "legacy" .Values.nodeAffinity "supported" .Values.ksm.affinity.nodeAffinity )) -}}
      {{- if (or .Values.ksm.affinity.podAffinity $nodeAffinity) }}
      affinity:
        {{- with .Values.ksm.affinity.podAffinity }}
        podAffinity: {{ . | toYaml | nindent 10 }}
        {{- end }}
        {{- with $nodeAffinity }}
        nodeAffinity:
          {{- . | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- with .Values.ksm.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end -}}

      {{- with (include "newrelic.compatibility.valueWithFallback" (dict "legacy" .Values.nodeSelector "supported" .Values.ksm.nodeSelector )) }}
      nodeSelector:
        {{- . | nindent 8}}
      {{- end -}}
{{- end }}
