global:
  licenseKey: 1234567890abcdef1234567890abcdef12345678
  cluster: test-cluster

common:
  agentConfig:
    # We set it in order for the kubelet to not crash when posting tho the agent. Since the License_Key is
    # not valid, the Identity Api doesn't return an AgentID and the server from the Agent takes to long to respond
    is_forward_only: true
  config:
    interval: 30s
    timeout: 180s

customAttributes: '{"new":"relic","loren":"ipsum"}'

# Disable KSM scraper as it is not enabled when testing this chart individually.
ksm:
  enabled: false

# K8s DaemonSets update strategy.
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

enableProcessMetrics: "false"
serviceAccount:
  create: true

podAnnotations:
  annotation1: "annotation"
podLabels:
  label1: "label"

securityContext:
  runAsUser: 1000
  runAsGroup: 2000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true

privileged: true

rbac:
  create: true
  pspEnabled: false

prefixDisplayNameWithCluster: false
useNodeNameAsDisplayName: true
integrations_config: []

kubelet:
  enabled: true
  annotations: {}
  tolerations:
    - operator: "Exists"
      effect: "NoSchedule"
    - operator: "Exists"
      effect: "NoExecute"
  extraEnv:
    - name: ENV_VAR1
      value: "var1"
    - name: ENV_VAR2
      value: "var2"
  resources:
    limits:
      memory: 400M
    requests:
      cpu: 100m
      memory: 180M
  config:
    scheme: "http"

controlPlane:
  kind: Deployment
  enabled: true
  config:
    etcd:
      enabled: true
      autodiscover:
        - selector: "tier=control-plane,component=etcd"
          namespace: kube-system
          matchNode: true
          endpoints:
            - url: https://localhost:4001
              insecureSkipVerify: true
              auth:
                type: bearer
            - url: http://localhost:2381
    scheduler:
      enabled: true
      autodiscover:
        - selector: "tier=control-plane,component=kube-scheduler"
          namespace: kube-system
          matchNode: true
          endpoints:
            - url: https://localhost:10259
              insecureSkipVerify: true
              auth:
                type: bearer
    controllerManager:
      enabled: true
      autodiscover:
        - selector: "tier=control-plane,component=kube-controller-manager"
          namespace: kube-system
          matchNode: true
          endpoints:
            - url: https://localhost:10257
              insecureSkipVerify: true
              auth:
                type: bearer
                mtls:
                  secretName: secret-name
                  secretNamespace: default
    apiServer:
      enabled: true
      autodiscover:
        - selector: "tier=control-plane,component=kube-apiserver"
          namespace: kube-system
          matchNode: true
          endpoints:
            - url: https://localhost:8443
              insecureSkipVerify: true
              auth:
                type: bearer
                mtls:
                  secretName: secret-name4
            - url: http://localhost:8080
