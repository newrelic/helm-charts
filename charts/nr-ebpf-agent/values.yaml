# -- Name of the Kubernetes cluster to be monitored. Mandatory. Can be configured with `global.cluster`
cluster: ""
# -- The license key to use. Can be configured with `global.licenseKey`
licenseKey: ""
# -- Endpoint to export data to via the otel collector. NR prod (otlp.nr-data.net:4317) by default. Staging (staging-otlp.nr-data.net:4317) otherwise. Requires a valid staging license key. Can also be configured with global.nrStaging.
nrStaging: false
# -- Configures the agent to send all data through the proxy specified via the otel collector.
proxy: ""
# -- The primary lever to control RAM use of the eBPF agent. Specified in MiB.
tableStoreDataLimitMB: "250"
# -- The source connectors (and data export scripts) to enable.
# Note that socket_tracer tracks http, mysql, redis, mongodb, amqp, cassandra, dns, and postgresql
# while tcp_stats tracks TCP metrics.
stirlingSources: "socket_tracer,tcp_stats"
# -- The protocols (and data export scripts) to enable for tracing in the socket_tracer.
protocols:
  http: true
  kafka: true
  mysql: true
  redis: true
  mongodb: true
  amqp: true
  cass: true
  dns: true
  pgsql: true

# Configuration to apply on the eBPF agent daemonset.
ebpfAgent:
  image:
    # -- eBPF agent image to be deployed.
    repository: us-west1-docker.pkg.dev/pl-dev-infra/nr-ebpf-agent-lp/ebpf-agent
    # -- The pull policy is defaulted to IfNotPresent, which skips pulling an image if it already exists. If pullPolicy is defined without a specific value, it is also set to Always.
    pullPolicy: IfNotPresent
    # -- The tag of the eBPF agent image to be deployed.
    tag: 0.0.3
  resources:
    limits:
      # -- Max memory allocated to the container.
      memory: 2Gi
    requests:
      # -- Min CPU allocated to the container.
      cpu: 100m
      # -- Min memory allocated to the container.
      memory: 250Mi

# Configuration to apply on the eBPF client daemonset.
ebpfClient:
  image:
    # -- eBPF client image to be deployed.
    repository: us-west1-docker.pkg.dev/pl-dev-infra/nr-ebpf-agent-lp/ebpf-client
    # -- The pull policy is defaulted to IfNotPresent, which skips pulling an image if it already exists. If pullPolicy is defined without a specific value, it is set to Always.
    pullPolicy: IfNotPresent
    # -- The tag of the eBPF client image to be deployed.
    tag: 0.0.4
  resources:
    limits:
      # -- Max memory allocated to the container.
      memory: 100Mi
    requests:
      # -- Min CPU allocated to the container.
      cpu: 50m
      # -- Min memory allocated to the container.
      memory: 50Mi

# Configuration to apply on the OpenTelemetry collector daemonset.
otelCollector:
  image:
    # -- OpenTelemetry collector image to be deployed.
    repository: us-west1-docker.pkg.dev/pl-dev-infra/nr-ebpf-agent-lp/nr-ebpf-otel-collector
    # -- The pull policy is defaulted to IfNotPresent, which skips pulling an image if it already exists. If pullPolicy is defined without a specific value, it is set to Always.
    pullPolicy: IfNotPresent
    # -- The tag of the OpenTelemetry collector image to be deployed.
    tag: 0.0.1
  resources:
    limits:
      # -- Max CPU allocated to the container.
      cpu: 100m
      # -- Max memory allocated to the container.
      memory: 200Mi
    requests:
      # -- Min CPU allocated to the container.
      cpu: 100m
      # -- Min memory allocated to the container.
      memory: 200Mi
  collector:
    serviceAccount:
      # -- Annotations for the OTel collector service account.
      annotations: {}

# -- Additional labels for chart pods
podLabels: {}
# -- Additional labels for chart objects
labels: {}
# -- Sets all pods' node selector. Can be configured also with `global.nodeSelector`
nodeSelector: {}
# -- Sets all pods' tolerations to node taints. Can be configured also with `global.tolerations`
tolerations: []
# -- Sets all pods' affinities. Can be configured also with `global.affinity`
affinity: {}
