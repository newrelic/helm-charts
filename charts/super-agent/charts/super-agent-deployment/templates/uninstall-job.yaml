{{- if .Values.cleanupManagedResources -}}
{{- $uninstallJobName := include "newrelic.common.naming.truncateToDNSWithSuffix" ( dict "name" (include "newrelic.common.naming.fullname" .) "suffix" "deployment-uninstall" ) -}}
{{- /*
The resources managed by the super-agent and the label selector are hardcoded on the super-agent.
*/ -}}
{{- $saCRList := (list "helmreleases.helm.toolkit.fluxcd.io" "helmrepositories.source.toolkit.fluxcd.io") -}}
{{- $saResourcesLabelSelector := "app.kubernetes.io/managed-by=newrelic-super-agent" -}}
{{- /*
To understand why this job installs manifests instead of using Helm, read the comment at `job-manifests.yaml`.
*/ -}}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "10010"
  name: {{ $uninstallJobName }}
  namespace: {{ .Release.Namespace }}
spec:
  ttlSecondsAfterFinished: 120
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "newrelic.common.serviceAccount.name" . }}
      containers:
        - name: delete-managed-resources
          image: bitnami/kubectl  # TODO: Pin version to the latest that we support.
          command:
            - bash
          args:
            - -c
            - |
              set -o pipefail

              # We want to avoid having the SA recreating some of the resources we are deleting running this job
              kubectl scale deployment --replicas=0 {{ include "newrelic.common.naming.fullname" . }}  -n {{ $.Release.Namespace }} --timeout=60s

              # Delete the standard resources (configmaps) managed by the super-agent
              kubectl delete configmaps -n {{ .Release.Namespace }} -l {{ $saResourcesLabelSelector }}

              # Delete the CRs managed by the super-agent if the corresponding CRDs exist
              {{ range $i, $cr := $saCRList }}
              if kubectl api-resources -o name |grep {{ $cr }}; then
                kubectl -n {{ $.Release.Namespace }} delete {{ $cr }} -l {{ $saResourcesLabelSelector }}
              fi
              {{ end }}
      
              {{- if include "newrelic-super-agent.auth.secret.shouldRunJob" . }}
              # Delete the secrets created in the cluster
              kubectl -n {{ $.Release.Namespace }} delete secret {{ include "newrelic-super-agent.auth.secret.name" . }}
              {{- end }}
{{- end -}}
