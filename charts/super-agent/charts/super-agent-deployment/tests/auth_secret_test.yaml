suite: test super agent deployment's authSecret configurations
templates:
  - templates/auth-secret.yaml
  - templates/configmap-superagent-config.yaml
  - templates/configmap-subagent-configs.yaml
  - templates/deployment-superagent.yaml
release:
  name: my-release
  namespace: my-namespace

tests:
  - it: authSecret is created and mounted correctly
    set:
      cluster: test
      authSecret:
        create: true
        name: auth-credentials
        data:
          auth_key: test-key
    asserts:
      - template: templates/deployment-superagent.yaml
        equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - name: super-agent-config
              mountPath: /etc/newrelic-super-agent
              readOnly: true
            - mountPath: /var/lib/newrelic-super-agent
              name: var-lib-newrelic-super-agent
              readOnly: false
            - name: auth-secret-volume
              mountPath: /etc/newrelic-super-agent
              readOnly: true
      - template: templates/deployment-superagent.yaml
        equal:
          path: spec.template.spec.volumes
          value:
            - name: super-agent-config
              configMap:
                name: local-data-super-agent
                items:
                  - key: local_config
                    path: config.yaml
            - name: var-lib-newrelic-super-agent
              emptyDir: {}
            - name: auth-secret-volume
              secret:
                secretName: auth-credentials
      - template: templates/auth-secret.yaml
        equal:
          path: metadata.name
          value: auth-credentials
      - template: templates/auth-secret.yaml
        equal:
          path: data.auth_key
          value: dGVzdC1rZXk= # base64 for "test-key"

  - it: no mount and secret is created when authSecret.create is false
    set:
      cluster: test
      authSecret:
        create: false
    asserts:
      - template: templates/deployment-superagent.yaml
        notContains:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            name: auth-secret-volume
      - template: templates/deployment-superagent.yaml
        notContains:
          path: spec.template.spec.volumes
          value:
            name: auth-secret-volume

  - it: authSecret is empty and defaults to authSecret.create=false
    set:
      cluster: test
      authSecret:
    asserts:
      - template: templates/deployment-superagent.yaml
        notContains:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            name: auth-secret-volume
      - template: templates/deployment-superagent.yaml
        notContains:
          path: spec.template.spec.volumes
          value:
            name: auth-secret-volume

  - it: authSecret create is empty with other fields set and defaults to authSecret.create=false
    set:
      cluster: test
      authSecret:
        name: test
    asserts:
      - template: templates/deployment-superagent.yaml
        notContains:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            name: auth-secret-volume
      - template: templates/deployment-superagent.yaml
        notContains:
          path: spec.template.spec.volumes
          value:
            name: auth-secret-volume

  - it: authSecret creation fails when data is not provided
    set:
      cluster: test
      authSecret:
        create: true
    asserts:
      - template: templates/auth-secret.yaml
        failedTemplate:
          errorMessage: authSecret.data must be provided when authSecret.create is true

  - it: authSecret creation fails when no auth_key is provided
    set:
      cluster: test
      authSecret:
        create: true
        data:
          auth_key:
    asserts:
      - template: templates/auth-secret.yaml
        failedTemplate:
          errorMessage: auth_key must be provided when authSecret.create is true
