name: Post Release Tasks

on:
  release:
    types: [released]

env:
  ORIGINAL_REPO_NAME: ${{ github.event.repository.full_name }}
  RELEASE_PATH: charts/nri-bundle
  RELEASE_FILE: RELEASE.md
  SLACK_FILE: RELEASE.slack

jobs:
  release-notes:
    if: startsWith(github.event.release.tag_name, 'nri-bundle-')
    name: Publish release notes
    runs-on: ubuntu-latest
    outputs:
      announcement: ${{ steps.slack-announcement.outputs.announcement }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Create release notes
        run: |
          scripts/write-release-notes.sh ${{ env.RELEASE_FILE }} ${{ env.SLACK_FILE }}
          gh release edit ${{ github.event.release.tag_name }} \
            --notes-file ${{ env.RELEASE_PATH }}/${{ env.RELEASE_FILE }}

      - name: Write Slack announcement
        id: slack-announcement
        run: |
          announcement=$(cat ${{ env.RELEASE_PATH }}/${{ env.SLACK_FILE }})
          echo "announcement=$announcement" >> "$GITHUB_OUTPUT"

  announce-release:
    if: startsWith(github.event.release.tag_name, 'nri-bundle-')
    name: Announce bundle release
    runs-on: ubuntu-latest
    needs: release-notes
    steps:
      - name: Notify release via Slack
        uses: archive/github-actions-slack@v2.8.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.K8S_AGENTS_SLACK_TOKEN }}
          slack-channel: ${{ secrets.K8S_AGENTS_SLACK_CHANNEL }}
          slack-text: "${{ needs.release-notes.outputs.announcement }}"

  # update-public-docs:
  #   if: startsWith(github.event.release.tag_name, 'nri-bundle-')
  #   name: Update public docs
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download release notes
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: release-notes-file

  # update-eks-sleek:
  #   if: startsWith(github.event.release.tag_name, 'nri-bundle-')
  #   name: Update EKS Sleek repo
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 

  notify-failure:
    if: ${{ always() && failure() }}
    needs: [release-notes,announce-release]
    runs-on: ubuntu-latest
    steps:
      - name: Notify failure via Slack
        uses: archive/github-actions-slack@v2.8.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.K8S_AGENTS_SLACK_TOKEN }}
          slack-channel: ${{ secrets.K8S_AGENTS_SLACK_CHANNEL }}
          slack-text: "‚ùå `${{ env.ORIGINAL_REPO_NAME }}`: <${{ github.server_url }}/${{ env.ORIGINAL_REPO_NAME }}/actions/runs/${{ github.run_id }}|'Post Release Tasks' failed>."
