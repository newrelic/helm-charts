global:
  cluster: ""
  licenseKey: ""
  customSecretName: ""
  customSecretLicenseKey: ""
  insightsKey: ""
  customInsightsKeySecretName: ""
  customInsightsKeySecretKey: ""
  region: ""
  userKey: ""
  customUserKeySecretName: ""
  customUserKeySecretKey: ""

  image:
    pullPolicy: []
    registry:

  serviceAccount:
    create:
    annotations:
    name:

  deploymentAnnotations: {}
  podAnnotations: {}
  labels: {}
  podLabels: {}

  privileged:
  priorityClassName: ""
  hostNetwork:
  podSecurityContext: {}
  containerSecurityContext: {}

  dnsconfig: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}

  proxy:

  lowDataMode:

  nrStaging:
  fedRamp:
    enabled:

  verboseLog:

licenseKey: foobar  # These ease testing as we don't have to set these values in each test
cluster: barfoo  # These ease testing as we don't have to set these values in each test
customSecretName: ""
customSecretLicenseKey: ""
insightsKey: foobaz  # These ease testing as we don't have to set these values in each test
customInsightsKeySecretName: ""
customInsightsKeySecretKey: ""
region: ""
userKey: "barqux"  # These ease testing as we don't have to set these values in each test
customUserKeySecretName: ""
customUserKeySecretKey: ""

nameOverride: ""
fullnameOverride: ""

image:
  registry:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []

serviceAccount:
  create:
  annotations:
  name:

deploymentAnnotations: {}
podAnnotations: {}
labels: {}
podLabels: {}

privileged:
priorityClassName: ""
hostNetwork:
podSecurityContext: {}
  # fsGroup: 2000
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

dnsconfig: {}

service:
  type: ClusterIP
  port: 80

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

proxy:

lowDataMode:

nrStaging:
fedRamp:
  enabled:

verboseLog:
